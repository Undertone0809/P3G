name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install poetry
      run: |
        python -m pip install --upgrade pip
        pip install poetry cookiecutter

    - name: Install dependencies
      run: |
        poetry install --with dev

    - name: Generate test project
      run: |
        echo '{
          "project_name": "test-project",
          "minimal_python_version": 3.8,
          "create_example_template": "cli",
          "license": "MIT",
          "project_description": "Test project",
          "organization": "test-org",
          "github_name": "test-org",
          "email": "test@example.com",
          "version": "0.1.0",
          "line_length": 88,
          "using_tsinghua_mirror_source": false,
          "install_ruff": true,
          "install_pre_commit": true,
          "install_coverage": true,
          "install_darglint": false,
          "install_safety": false
        }' > cookiecutter_config.json
        cookiecutter . --no-input --config-file cookiecutter_config.json

    - name: Run tests
      run: |
        cd test-project
        poetry install --with dev
        poetry run pytest
